{"version":3,"file":"main.ac7a4e80358f88494ac0.js","mappings":"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","sources":["webpack://karate-kido-game/webpack/runtime/chunk loaded","webpack://karate-kido-game/./src/scenes/MenuScene.js","webpack://karate-kido-game/./src/core/Player.js","webpack://karate-kido-game/./src/core/Enemy.js","webpack://karate-kido-game/./src/core/CombatSystem.js","webpack://karate-kido-game/./src/core/UIManager.js","webpack://karate-kido-game/./src/core/InputHandler.js","webpack://karate-kido-game/./src/scenes/GameScene.js","webpack://karate-kido-game/./src/scenes/GameOverScene.js","webpack://karate-kido-game/./src/main.js","webpack://karate-kido-game/webpack/bootstrap","webpack://karate-kido-game/webpack/runtime/compat get default export","webpack://karate-kido-game/webpack/runtime/define property getters","webpack://karate-kido-game/webpack/runtime/hasOwnProperty shorthand","webpack://karate-kido-game/webpack/runtime/jsonp chunk loading","webpack://karate-kido-game/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import Phaser from 'phaser';\n\nexport default class MenuScene extends Phaser.Scene {\n  constructor() {\n    super('MenuScene');\n  }\n\n  create() {\n    // Title\n    this.add.text(this.scale.width / 2, 150, 'Karate Kido', {\n      font: '64px Arial',\n      color: '#fff',\n      fontStyle: 'bold'\n    }).setOrigin(0.5);\n\n    // Button styles\n    const buttonStyle = { font: '32px Arial', color: '#222', backgroundColor: '#fff', padding: { x: 20, y: 10 } };\n\n    // Start Game Button\n    const startBtn = this.add.text(this.scale.width / 2, 300, 'Start Game', buttonStyle)\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on('pointerdown', () => this.scene.start('GameScene'));\n\n    // Options Button\n    const optionsBtn = this.add.text(this.scale.width / 2, 380, 'Options', buttonStyle)\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on('pointerdown', () => this.showOptions());\n\n    // Credits Button\n    const creditsBtn = this.add.text(this.scale.width / 2, 460, 'Credits', buttonStyle)\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on('pointerdown', () => this.showCredits());\n  }\n\n  showOptions() {\n    // Placeholder for options logic\n    alert('Options coming soon!');\n  }\n\n  showCredits() {\n    // Placeholder for credits logic\n    alert('Created by instakarate!');\n  }\n}\n","import Phaser from 'phaser';\n\nexport default class Player extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y) {\n    super(scene, x, y, 'player_idle');\n    scene.add.existing(this);\n    scene.physics.add.existing(this);\n\n    // Player Stats\n    this.health = 100;\n    this.maxHealth = 100;\n    this.stamina = 100;\n    this.maxStamina = 100;\n    this.score = 0;\n\n    // State\n    this.isMoving = false;\n    this.isAttacking = false;\n    this.isBlocking = false;\n    this.isDead = false;\n\n    // Setup physics body and animations\n    this.body.setCollideWorldBounds(true);\n\n    this.setupAnimations(scene);\n\n    // Listen for input events\n    scene.inputHandler.on('move', dir => this.handleMove(dir));\n    scene.inputHandler.on('attack', type => this.handleAttack(type));\n    scene.inputHandler.on('block', () => this.handleBlock());\n\n    // Internal animation state\n    this.currentAnim = 'idle';\n  }\n\n  setupAnimations(scene) {\n    // Example: idle, walk, punch, kick, block, hurt\n    scene.anims.create({ key: 'idle', frames: scene.anims.generateFrameNumbers('player_idle', { start: 0, end: 3 }), frameRate: 6, repeat: -1 });\n    scene.anims.create({ key: 'walk', frames: scene.anims.generateFrameNumbers('player_walk', { start: 0, end: 5 }), frameRate: 10, repeat: -1 });\n    scene.anims.create({ key: 'punch', frames: scene.anims.generateFrameNumbers('player_punch', { start: 0, end: 2 }), frameRate: 12, repeat: 0 });\n    scene.anims.create({ key: 'kick', frames: scene.anims.generateFrameNumbers('player_kick', { start: 0, end: 2 }), frameRate: 12, repeat: 0 });\n    scene.anims.create({ key: 'block', frames: scene.anims.generateFrameNumbers('player_block', { start: 0, end: 1 }), frameRate: 8, repeat: -1 });\n    scene.anims.create({ key: 'hurt', frames: scene.anims.generateFrameNumbers('player_hurt', { start: 0, end: 1 }), frameRate: 8, repeat: 0 });\n  }\n\n  update() {\n    if (this.isDead) return;\n\n    // Animation state management\n    if (this.isAttacking) return;\n    if (this.isBlocking) {\n      this.play('block', true);\n      return;\n    }\n    if (this.body.velocity.x !== 0) {\n      this.play('walk', true);\n      this.isMoving = true;\n    } else {\n      this.play('idle', true);\n      this.isMoving = false;\n    }\n  }\n\n  handleMove(dir) {\n    if (this.isDead || this.isAttacking) return;\n    const speed = 220;\n    switch (dir) {\n      case 'left':\n        this.setVelocityX(-speed);\n        this.setFlipX(true);\n        break;\n      case 'right':\n        this.setVelocityX(speed);\n        this.setFlipX(false);\n        break;\n      case 'up':\n        this.setVelocityY(-speed);\n        break;\n      case 'down':\n        this.setVelocityY(speed);\n        break;\n      default:\n        this.setVelocity(0);\n    }\n  }\n\n  handleAttack(type) {\n    if (this.isDead || this.isAttacking || this.isBlocking) return;\n    this.isAttacking = true;\n    this.setVelocity(0);\n    let anim = type === 'kick' ? 'kick' : 'punch';\n    this.play(anim, true);\n    this.once('animationcomplete', () => {\n      this.isAttacking = false;\n      this.emit('attackComplete', type);\n    });\n  }\n\n  handleBlock() {\n    if (this.isDead) return;\n    this.isBlocking = true;\n    this.play('block', true);\n    // Block lasts for a short duration\n    this.scene.time.delayedCall(800, () => {\n      this.isBlocking = false;\n    });\n  }\n\n  takeDamage(amount) {\n    if (this.isBlocking) {\n      amount = Math.max(3, amount * 0.35); // Block reduces damage\n    }\n    this.health = Math.max(0, this.health - amount);\n    this.play('hurt', true);\n    if (this.health <= 0) {\n      this.die();\n    }\n  }\n\n  die() {\n    this.isDead = true;\n    this.setVelocity(0);\n    this.play('hurt', true);\n    // More death logic here\n  }\n\n  recoverStamina(amount) {\n    this.stamina = Math.min(this.maxStamina, this.stamina + amount);\n  }\n\n  useStamina(amount) {\n    this.stamina = Math.max(0, this.stamina - amount);\n  }\n}\n","import Phaser from 'phaser';\n\nconst DIFFICULTY = {\n  easy: { health: 60, damage: 7, speed: 120, attackFreq: 1800 },\n  medium: { health: 90, damage: 12, speed: 180, attackFreq: 1200 },\n  hard: { health: 120, damage: 18, speed: 220, attackFreq: 800 },\n  boss: { health: 200, damage: 25, speed: 280, attackFreq: 500 }\n};\n\nexport default class Enemy extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene, x, y, difficulty = 'easy') {\n    super(scene, x, y, 'enemy_idle');\n    scene.add.existing(this);\n    scene.physics.add.existing(this);\n\n    this.difficulty = difficulty;\n    Object.assign(this, DIFFICULTY[difficulty]);\n\n    this.maxHealth = this.health;\n    this.isDead = false;\n    this.state = 'patrol'; // patrol, pursue, attack, evade, defend\n\n    this.body.setCollideWorldBounds(true);\n\n    this.setupAnimations(scene);\n\n    // AI decision timer\n    this.decisionTimer = scene.time.addEvent({\n      delay: this.attackFreq,\n      loop: true,\n      callback: this.aiDecision,\n      callbackScope: this\n    });\n\n    this.target = scene.player; // Assumes player instance is passed or available\n  }\n\n  setupAnimations(scene) {\n    scene.anims.create({ key: 'enemy_idle', frames: scene.anims.generateFrameNumbers('enemy_idle', { start: 0, end: 3 }), frameRate: 6, repeat: -1 });\n    scene.anims.create({ key: 'enemy_walk', frames: scene.anims.generateFrameNumbers('enemy_walk', { start: 0, end: 5 }), frameRate: 10, repeat: -1 });\n    scene.anims.create({ key: 'enemy_punch', frames: scene.anims.generateFrameNumbers('enemy_punch', { start: 0, end: 2 }), frameRate: 12, repeat: 0 });\n    scene.anims.create({ key: 'enemy_kick', frames: scene.anims.generateFrameNumbers('enemy_kick', { start: 0, end: 2 }), frameRate: 12, repeat: 0 });\n    scene.anims.create({ key: 'enemy_block', frames: scene.anims.generateFrameNumbers('enemy_block', { start: 0, end: 1 }), frameRate: 8, repeat: -1 });\n    scene.anims.create({ key: 'enemy_hurt', frames: scene.anims.generateFrameNumbers('enemy_hurt', { start: 0, end: 1 }), frameRate: 8, repeat: 0 });\n  }\n\n  update() {\n    if (this.isDead) return;\n\n    if (this.state === 'patrol') {\n      this.patrol();\n    } else if (this.state === 'pursue') {\n      this.pursue();\n    } else if (this.state === 'attack') {\n      this.attack();\n    } else if (this.state === 'evade') {\n      this.evade();\n    } else if (this.state === 'defend') {\n      this.block();\n    }\n  }\n\n  aiDecision() {\n    if (this.isDead) return;\n    const distance = Phaser.Math.Distance.Between(this.x, this.y, this.target.x, this.target.y);\n\n    // Distance-based behavior\n    if (distance < 80) {\n      // Attack or block\n      if (Math.random() < 0.7) {\n        this.state = 'attack';\n      } else {\n        this.state = 'defend';\n      }\n    } else if (distance < 300) {\n      // Pursue\n      this.state = 'pursue';\n    } else {\n      // Patrol/evade\n      this.state = Math.random() < 0.4 ? 'evade' : 'patrol';\n    }\n  }\n\n  patrol() {\n    this.setVelocityX(this.speed * (Math.random() > 0.5 ? 1 : -1));\n    this.play('enemy_walk', true);\n  }\n\n  pursue() {\n    const dir = (this.target.x < this.x) ? -1 : 1;\n    this.setVelocityX(this.speed * dir);\n    this.play('enemy_walk', true);\n  }\n\n  attack() {\n    this.setVelocity(0);\n    const attackType = Math.random() > 0.5 ? 'enemy_punch' : 'enemy_kick';\n    this.play(attackType, true);\n    this.once('animationcomplete', () => {\n      // Emit attack event for CombatSystem\n      this.emit('attackComplete', attackType.includes('kick') ? 'kick' : 'punch');\n      this.state = 'patrol';\n    });\n  }\n\n  block() {\n    this.setVelocity(0);\n    this.play('enemy_block', true);\n    // Block lasts for a short duration\n    this.scene.time.delayedCall(600, () => {\n      this.state = 'patrol';\n    });\n  }\n\n  evade() {\n    this.setVelocityX(this.speed * (Math.random() > 0.5 ? 1 : -1));\n    this.play('enemy_walk', true);\n    this.scene.time.delayedCall(350, () => {\n      this.state = 'patrol';\n    });\n  }\n\n  takeDamage(amount) {\n    this.health = Math.max(0, this.health - amount);\n    this.play('enemy_hurt', true);\n    if (this.health <= 0) {\n      this.die();\n    }\n  }\n\n  die() {\n    this.isDead = true;\n    this.setVelocity(0);\n    this.play('enemy_hurt', true);\n    this.decisionTimer.remove();\n    // More death logic here\n  }\n}\n","import Phaser from 'phaser';\nimport EventEmitter from 'events';\n\nexport default class CombatSystem extends EventEmitter {\n  constructor(scene, player, enemy) {\n    super();\n    this.scene = scene;\n    this.player = player;\n    this.enemy = enemy;\n\n    // Combo system\n    this.comboCount = 0;\n    this.comboMultiplier = 1;\n    this.comboTimer = null;\n    this.comboBreakDuration = 4000; // 4 seconds\n\n    // Listen for attack events\n    this.player.on('attackComplete', type => this.handleAttack(this.player, this.enemy, type));\n    this.enemy.on('attackComplete', type => this.handleAttack(this.enemy, this.player, type));\n  }\n\n  update() {\n    // Hitbox checking logic can go here if pooling is needed\n    // For prototype, simple overlap check\n    // Example: check for active attack and overlap\n  }\n\n  handleAttack(attacker, defender, type) {\n    // Only process if both are alive\n    if (attacker.isDead || defender.isDead) return;\n\n    // Simple hitbox check: if attacker and defender are close horizontally\n    const hitRange = 70;\n    if (Phaser.Math.Distance.Between(attacker.x, attacker.y, defender.x, defender.y) < hitRange) {\n      let baseDamage = type === 'kick' ? 15 : 10;\n      let comboBonus = this.comboMultiplier;\n      let totalDamage = baseDamage * comboBonus;\n\n      // Block mechanic\n      if (defender.isBlocking) {\n        totalDamage = Math.max(3, totalDamage * 0.35);\n        this.emit('block', { attacker, defender, reduced: totalDamage });\n      } else {\n        this.emit('hit', { attacker, defender, damage: totalDamage });\n      }\n\n      defender.takeDamage(totalDamage);\n\n      // Combo tracking\n      if (attacker === this.player) {\n        this.comboCount += 1;\n        this.comboMultiplier = Math.min(5, 1 + Math.floor(this.comboCount / 2));\n        this.player.score += totalDamage * this.comboMultiplier;\n        this.emit('combo', { count: this.comboCount, multiplier: this.comboMultiplier });\n        this.resetComboTimer();\n      } else {\n        this.comboCount = 0;\n        this.comboMultiplier = 1;\n        this.emit('comboEnded');\n      }\n    } else {\n      // Missed attack resets combo\n      if (attacker === this.player) {\n        this.comboCount = 0;\n        this.comboMultiplier = 1;\n        this.emit('comboBroke');\n      }\n    }\n  }\n\n  resetComboTimer() {\n    if (this.comboTimer) this.comboTimer.remove();\n    this.comboTimer = this.scene.time.delayedCall(this.comboBreakDuration, () => {\n      this.comboCount = 0;\n      this.comboMultiplier = 1;\n      this.emit('comboEnded');\n    });\n  }\n}\n","import Phaser from 'phaser';\n\nexport default class UIManager {\n  constructor(scene, player, enemy) {\n    this.scene = scene;\n    this.player = player;\n    this.enemy = enemy;\n\n    // Health bars\n    this.playerHealthBar = scene.add.rectangle(200, 40, 300, 28, 0x2ecc40).setOrigin(0, 0.5);\n    this.enemyHealthBar = scene.add.rectangle(780, 40, 300, 28, 0xe74c3c).setOrigin(0, 0.5);\n\n    // Score\n    this.scoreText = scene.add.text(650, 20, 'Score: 0', { font: '24px Arial', color: '#fff' }).setOrigin(0.5);\n\n    // Combo\n    this.comboText = scene.add.text(650, 70, '', { font: '32px Arial', color: '#ffeb3b' }).setOrigin(0.5);\n\n    // Stamina/Power meter\n    this.staminaBar = scene.add.rectangle(200, 80, 300, 16, 0x3498db).setOrigin(0, 0.5);\n\n    // Move list\n    this.moveListText = scene.add.text(40, 120,\n      'Moves: ←/→/A/D = Move | SPACE = Punch | E = Kick | Hold B = Block', { font: '18px Arial', color: '#fff' });\n\n    // Pause overlay\n    this.pauseOverlay = scene.add.rectangle(scene.scale.width / 2, scene.scale.height / 2, scene.scale.width, scene.scale.height, 0x000000, 0.4).setVisible(false);\n    this.pauseText = scene.add.text(scene.scale.width / 2, scene.scale.height / 2, 'PAUSED', { font: '56px Arial', color: '#fff' }).setOrigin(0.5).setVisible(false);\n\n    // FPS counter (for debugging)\n    this.fpsText = scene.add.text(10, 10, '', { font: '16px Arial', color: '#888' });\n\n    // Listen for combat events\n    scene.combatSystem.on('combo', data => this.showCombo(data.count, data.multiplier));\n    scene.combatSystem.on('comboEnded', () => this.hideCombo());\n    scene.combatSystem.on('comboBroke', () => this.comboText.setText('Combo Broke!').setColor('#e74c3c'));\n\n    // Color warning for critical health\n    this.criticalHealthThreshold = 0.25;\n  }\n\n  update() {\n    // Health bars\n    this.playerHealthBar.width = 300 * (this.player.health / this.player.maxHealth);\n    this.enemyHealthBar.width = 300 * (this.enemy.health / this.enemy.maxHealth);\n\n    if (this.player.health / this.player.maxHealth < this.criticalHealthThreshold)\n      this.playerHealthBar.setFillStyle(0xff4136);\n    else\n      this.playerHealthBar.setFillStyle(0x2ecc40);\n\n    if (this.enemy.health / this.enemy.maxHealth < this.criticalHealthThreshold)\n      this.enemyHealthBar.setFillStyle(0xff4136);\n    else\n      this.enemyHealthBar.setFillStyle(0xe74c3c);\n\n    // Stamina\n    this.staminaBar.width = 300 * (this.player.stamina / this.player.maxStamina);\n\n    // Score\n    this.scoreText.setText(`Score: ${this.player.score}`);\n\n    // FPS (debug)\n    this.fpsText.setText(`FPS: ${Math.floor(this.scene.game.loop.actualFps)}`);\n  }\n\n  showCombo(count, multiplier) {\n    this.comboText.setText(`Combo x${multiplier}! (${count} hits)`).setColor('#ffeb3b');\n    this.scene.tweens.add({\n      targets: this.comboText,\n      scale: { from: 1, to: 1.3 },\n      duration: 180,\n      yoyo: true\n    });\n  }\n\n  hideCombo() {\n    this.comboText.setText('');\n  }\n\n  showPause(isPaused) {\n    this.pauseOverlay.setVisible(isPaused);\n    this.pauseText.setVisible(isPaused);\n  }\n}\n","import Phaser from 'phaser';\nimport EventEmitter from 'events';\n\nexport default class InputHandler extends EventEmitter {\n  constructor(keyboard) {\n    super();\n    this.keyboard = keyboard;\n\n    // Arrow keys and WASD\n    this.cursors = keyboard.createCursorKeys();\n    this.keys = keyboard.addKeys({\n      'W': Phaser.Input.Keyboard.KeyCodes.W,\n      'A': Phaser.Input.Keyboard.KeyCodes.A,\n      'S': Phaser.Input.Keyboard.KeyCodes.S,\n      'D': Phaser.Input.Keyboard.KeyCodes.D,\n      'SPACE': Phaser.Input.Keyboard.KeyCodes.SPACE,\n      'E': Phaser.Input.Keyboard.KeyCodes.E,\n      'ESC': Phaser.Input.Keyboard.KeyCodes.ESC\n    });\n\n    // Listen for attacks\n    this.keys.SPACE.on('down', () => this.emit('attack', 'punch'));\n    this.keys.E.on('down', () => this.emit('attack', 'kick'));\n\n    // Listen for pause\n    this.keys.ESC.on('down', () => this.emit('pause'));\n\n    // Movement keys\n    keyboard.on('keydown', event => {\n      switch (event.code) {\n        case 'ArrowLeft':\n        case 'KeyA':\n          this.emit('move', 'left');\n          break;\n        case 'ArrowRight':\n        case 'KeyD':\n          this.emit('move', 'right');\n          break;\n        case 'ArrowUp':\n        case 'KeyW':\n          this.emit('move', 'up');\n          break;\n        case 'ArrowDown':\n        case 'KeyS':\n          this.emit('move', 'down');\n          break;\n      }\n    });\n  }\n}\n","import Phaser from 'phaser';\nimport Player from '../core/Player.js';\nimport Enemy from '../core/Enemy.js';\nimport CombatSystem from '../core/CombatSystem.js';\nimport UIManager from '../core/UIManager.js';\nimport InputHandler from '../core/InputHandler.js';\n\nconst GAME_STATE = { ACTIVE: 'active', PAUSED: 'paused', FINISHED: 'finished' };\n\nexport default class GameScene extends Phaser.Scene {\n  constructor() {\n    super('GameScene');\n    this.state = GAME_STATE.ACTIVE;\n  }\n\n  create() {\n    // Initialize player, enemy, combat system, UI\n    this.player = new Player(this, 200, 500);\n    this.enemy = new Enemy(this, 1080, 500, 'easy');\n    this.combatSystem = new CombatSystem(this, this.player, this.enemy);\n    this.uiManager = new UIManager(this, this.player, this.enemy);\n\n    // Input handler (observer pattern)\n    this.inputHandler = new InputHandler(this.input.keyboard);\n    this.inputHandler.on('pause', () => this.togglePause());\n    this.inputHandler.on('attack', action => this.player.handleAttack(action));\n\n    // Listen for game over\n    this.events.on('gameover', () => this.endGame());\n\n    // ESC to pause\n    this.input.keyboard.on('keydown-ESC', () => this.togglePause());\n  }\n\n  update(time, delta) {\n    if (this.state === GAME_STATE.PAUSED) return;\n    if (this.state === GAME_STATE.FINISHED) return;\n\n    this.player.update(time, delta);\n    this.enemy.update(time, delta);\n    this.combatSystem.update(time, delta);\n    this.uiManager.update();\n    \n    // Check for win/lose\n    if (this.player.health <= 0 || this.enemy.health <= 0) {\n      this.state = GAME_STATE.FINISHED;\n      this.events.emit('gameover');\n    }\n  }\n\n  togglePause() {\n    this.state = (this.state === GAME_STATE.PAUSED) ? GAME_STATE.ACTIVE : GAME_STATE.PAUSED;\n    this.uiManager.showPause(this.state === GAME_STATE.PAUSED);\n  }\n\n  endGame() {\n    this.scene.start('GameOverScene', {\n      winner: (this.player.health > 0) ? 'Player' : 'Enemy',\n      score: this.player.score\n    });\n  }\n}\n","import Phaser from 'phaser';\n\nexport default class GameOverScene extends Phaser.Scene {\n  constructor() {\n    super('GameOverScene');\n  }\n\n  init(data) {\n    this.winner = data.winner;\n    this.score = data.score;\n  }\n\n  create() {\n    this.add.text(this.scale.width / 2, 200, `Game Over!`, {\n      font: '56px Arial',\n      color: '#fff'\n    }).setOrigin(0.5);\n\n    this.add.text(this.scale.width / 2, 300, `Winner: ${this.winner}`, {\n      font: '32px Arial',\n      color: '#fff'\n    }).setOrigin(0.5);\n\n    this.add.text(this.scale.width / 2, 380, `Score: ${this.score}`, {\n      font: '32px Arial',\n      color: '#fff'\n    }).setOrigin(0.5);\n\n    // Replay Button\n    const replayBtn = this.add.text(this.scale.width / 2, 480, 'Replay', {\n      font: '32px Arial', color: '#222', backgroundColor: '#fff', padding: { x: 20, y: 10 }\n    })\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on('pointerdown', () => this.scene.start('GameScene'));\n\n    // Menu Button\n    const menuBtn = this.add.text(this.scale.width / 2, 560, 'Main Menu', {\n      font: '32px Arial', color: '#222', backgroundColor: '#fff', padding: { x: 20, y: 10 }\n    })\n      .setOrigin(0.5)\n      .setInteractive({ useHandCursor: true })\n      .on('pointerdown', () => this.scene.start('MenuScene'));\n  }\n}\n","import Phaser from 'phaser';\nimport MenuScene from './scenes/MenuScene.js';\nimport GameScene from './scenes/GameScene.js';\nimport GameOverScene from './scenes/GameOverScene.js';\n\nconst config = {\n  type: Phaser.AUTO,\n  width: 1280,\n  height: 720,\n  backgroundColor: '#222',\n  parent: 'game-container',\n  physics: {\n    default: 'arcade',\n    arcade: {\n      gravity: { y: 0 },\n      debug: false\n    }\n  },\n  scene: [MenuScene, GameScene, GameOverScene],\n  scale: {\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH\n  }\n};\n\nconst game = new Phaser.Game(config);\n\nexport default game;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkkarate_kido_game\"] = self[\"webpackChunkkarate_kido_game\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [442], () => (__webpack_require__(295)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","MenuScene","Phaser","constructor","super","create","this","add","text","scale","width","font","color","fontStyle","setOrigin","buttonStyle","backgroundColor","padding","x","y","setInteractive","useHandCursor","on","scene","start","showOptions","showCredits","alert","Player","Arcade","Sprite","existing","physics","health","maxHealth","stamina","maxStamina","score","isMoving","isAttacking","isBlocking","isDead","body","setCollideWorldBounds","setupAnimations","inputHandler","dir","handleMove","type","handleAttack","handleBlock","currentAnim","anims","key","frames","generateFrameNumbers","end","frameRate","repeat","update","play","velocity","setVelocityX","setFlipX","setVelocityY","setVelocity","anim","once","emit","time","delayedCall","takeDamage","amount","Math","max","die","recoverStamina","min","useStamina","DIFFICULTY","easy","damage","speed","attackFreq","medium","hard","boss","Enemy","difficulty","Object","assign","state","decisionTimer","addEvent","delay","loop","callback","aiDecision","callbackScope","target","player","patrol","pursue","attack","evade","block","distance","Distance","Between","random","attackType","includes","remove","CombatSystem","EventEmitter","enemy","comboCount","comboMultiplier","comboTimer","comboBreakDuration","attacker","defender","totalDamage","reduced","floor","count","multiplier","resetComboTimer","UIManager","playerHealthBar","rectangle","enemyHealthBar","scoreText","comboText","staminaBar","moveListText","pauseOverlay","height","setVisible","pauseText","fpsText","combatSystem","data","showCombo","hideCombo","setText","setColor","criticalHealthThreshold","setFillStyle","game","actualFps","tweens","targets","from","to","duration","yoyo","showPause","isPaused","InputHandler","keyboard","cursors","createCursorKeys","keys","addKeys","Keyboard","KeyCodes","W","A","S","D","SPACE","E","ESC","event","code","GAME_STATE","GameScene","uiManager","input","togglePause","action","events","endGame","delta","winner","GameOverScene","init","config","parent","default","arcade","gravity","debug","mode","FIT","autoCenter","CENTER_BOTH","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}